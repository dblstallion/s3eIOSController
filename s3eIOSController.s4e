callbacks

include:
#include <s3eTypes.h>

// Opaque pointer struct
typedef struct s3eIOSController s3eIOSController;

typedef enum s3eIOSControllerCallback
{
	/**
	 * Called when a new controller is connected
	 * systemData will be a pointer to an s3eISOController for the connected device.
	 */
	S3E_IOSCONTROLLER_CALLBACK_CONNECTED,
	/**
	 * Called when a controller is disconnected
	 * systemData will be a pointer to an s3eISOController for the disconnected device.
	 */
	S3E_IOSCONTROLLER_CALLBACK_DISCONNECTED,
    /**
	 * Called when the pause button is pressed on a controller
	 * systemData will be a pointer to an s3eISOController for the connected device.
	 */
    S3E_IOSCONTROLLER_CALLBACK_PAUSE_PRESSED,
	
	// Marker for the last callback
	S3E_IOSCONTROLLER_CALLBACK_MAX
} s3eIOSControllerCallback;

typedef enum s3eIOSControllerButton
{
    // Basic controller
    S3E_IOSCONTROLLER_BUTTON_A,
    S3E_IOSCONTROLLER_BUTTON_B,
    S3E_IOSCONTROLLER_BUTTON_X,
    S3E_IOSCONTROLLER_BUTTON_Y,
    S3E_IOSCONTROLLER_BUTTON_DPAD_UP,
    S3E_IOSCONTROLLER_BUTTON_DPAD_DOWN,
    S3E_IOSCONTROLLER_BUTTON_DPAD_LEFT,
    S3E_IOSCONTROLLER_BUTTON_DPAD_RIGHT,
    S3E_IOSCONTROLLER_BUTTON_LEFT_SHOULDER,
    S3E_IOSCONTROLLER_BUTTON_RIGHT_SHOULDER,
    
    // Extended controller
    S3E_IOSCONTROLLER_BUTTON_LEFT_TRIGGER,
    S3E_IOSCONTROLLER_BUTTON_RIGHT_TRIGGER,
    S3E_IOSCONTROLLER_BUTTON_LEFT_THUMBSTICK_UP,
    S3E_IOSCONTROLLER_BUTTON_LEFT_THUMBSTICK_DOWN,
    S3E_IOSCONTROLLER_BUTTON_LEFT_THUMBSTICK_LEFT,
    S3E_IOSCONTROLLER_BUTTON_LEFT_THUMBSTICK_RIGHT,
    S3E_IOSCONTROLLER_BUTTON_RIGHT_THUMBSTICK_UP,
    S3E_IOSCONTROLLER_BUTTON_RIGHT_THUMBSTICK_DOWN,
    S3E_IOSCONTROLLER_BUTTON_RIGHT_THUMBSTICK_LEFT,
    S3E_IOSCONTROLLER_BUTTON_RIGHT_THUMBSTICK_RIGHT
} s3eIOSControllerButton;

typedef enum s3eIOSControllerAxis
{
    S3E_IOSCONTROLLER_AXIS_DPAD_X,
    S3E_IOSCONTROLLER_AXIS_DPAD_Y,
    S3E_IOSCONTROLLER_AXIS_LEFT_THUMBSTICK_X,
    S3E_IOSCONTROLLER_AXIS_LEFT_THUMBSTICK_Y,
    S3E_IOSCONTROLLER_AXIS_RIGHT_THUMBSTICK_X,
    S3E_IOSCONTROLLER_AXIS_RIGHT_THUMBSTICK_Y,
    S3E_IOSCONTROLLER_AXIS_LEFT_TRIGGER,
    S3E_IOSCONTROLLER_AXIS_RIGHT_TRIGGER
} s3eIOSControllerAxis;


functions:

uint32 s3eIOSControllerGetControllerCount() 0
s3eIOSController* s3eIOSControllerGetController(uint32 index) NULL

s3eBool s3eIOSControllerSupportsBasic(s3eIOSController* controller) S3E_FALSE
s3eBool s3eIOSControllerSupportsExtended(s3eIOSController* controller) S3E_FALSE
s3eBool s3eIOSControllerSupportsMicro(s3eIOSController* controller) S3E_FALSE

s3eBool s3eIOSControllerGetReportsAbsoluteDpadValues(s3eIOSController* controller) S3E_FALSE
void s3eIOSControllerSetReportsAbsoluteDpadValues(s3eIOSController* controller, s3eBool value)

s3eBool s3eIOSControllerGetAllowsRotation(s3eIOSController* controller) S3E_FALSE
void s3eIOSControllerSetAllowsRotation(s3eIOSController* controller, s3eBool value)

int32 s3eIOSControllerGetPlayerIndex(s3eIOSController* controller) -1
void s3eIOSControllerSetPlayerIndex(s3eIOSController* controller, int32 index)

s3eBool s3eIOSControllerGetButtonState(s3eIOSController* controller, s3eIOSControllerButton button) S3E_FALSE
float s3eIOSControllerGetAxisValue(s3eIOSController* controller, s3eIOSControllerAxis axis) 0.0f
